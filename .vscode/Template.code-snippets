{
	// Place your cpp_codes workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "",
		"prefix": "init",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define endl \"\\n\" ",
			"#define ll long long",
			"#define pb push_back",
			"#define mk make_pair",
			"#define pii pair<int, int>",
			"#define vi vector<int>",
			"#define all(x) (x).begin(), (x).end()",
			"#define umap unordered_map",
			"#define uset unordered_set ",
			"#define mod 1000000007",
			"#define imax INT_MAX",
			"#define imin INT_MIN",
			"#define exp 1e9",
			"#define sz(x) (int((x).size()))",
			"#define int long long",
			"",
			"int32_t main() {",
			"$1    ios_base::sync_with_stdio(false);",
			"$1    cin.tie(NULL);",
			"$1    return 0;",
			"}",
		],
		"description": "Default Template"
	}
}















int32_t main() {
    ios_base: :sync_with_stdio(false);
    cin.tie(NULL);
    return 0;
}